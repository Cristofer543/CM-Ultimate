<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>1524</ID>
      <Description>"pause"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
{$lua}
pause()

{$asm}

 
 
[DISABLE]
{$lua}
unpause()
closeCE()

{$asm}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1388</ID>
      <Description>"&lt;-----     CM Ultimate 0.20.1 (1102.1)"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>423</ID>
          <Description>"lobby  (you have to be the host of a custom lobby)"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>639</ID>
              <Description>"host mega xp lobby"</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-01-12
  Author : ZoDDeL

  This script does blah blah blah
}
// current 0.14.128
// 50 0 100 0 25 0 25 0 25 0 75 0 50 0 25 0 25 0 15 0 25 0 35 0 50 0 50 0 50 0 75 0 50 0 50 0 75 0 25 0 25 0 50 0 100 0 50 0 1 0 250 0 25 0 15 0 25 0 100 0 15 0 25 0 15 0 50 0 15 0 50 0 50 0 5 0 20 0 200 0 20 0 20 0 25

// original
// byte dec
// 50 0       25 0 25 0 25 0 75 0 50 0 25 0 25 0 15 0 25 0 35 0 50 0 50 0 50 0 75 0 50 0 50 0 75 0 25 0 25 0 50 0 100 0 50 0 1 0 250 0 25 0 15 0 25 0 100 0 15 0 25 0 15 0 50 0 15 0 50 0 50 0 5 0 20 0 200 0 20      0 25
// byte hex
// 32 00      19 00 19 00 19 00 4B 00 32 00 19 00 19 00 0F 00 19 00 23 00 32 00 32 00 32 00 4B 00 32 00 32 00 4B 00 19 00 19 00 32 00 64 00 32 00 01 00 FA 00 19 00 0F 00 19 00 64 00 0F 00 19 00 0F 00 32 00 0F 00 32 00 32 00 05 00 14 00 C8 00 14 00 19
[ENABLE]
// 34 1A 00 00 0F B7 71 20 49 8B 0E
// B5 1B 00 00 0F B7 71 20 49 8B 0E
// 0F B7 59 20 45 33 C0 48 8B CF 41 8D 50 05
aobscanmodule(xpbasekill,project.dll,0F B7 59 20 45 33 C0 48 8B CF 41 8D 50 05) // should be unique
alloc(newmem,$1000,xpbasekill)

label(code)
label(return)

newmem:
  mov [basekill],rcx
  cmp [toggleMEGA],#2
  je code
  cmp [toggleMEGA],#1
  je megaXP
  cmp [toggleMEGA],#0
  je defaultXP
  jmp code

    //default xp
defaultXP:
  cmp word ptr [rcx+20],#50
  je code
  mov word ptr [rcx+20],#50  // 4096 is maximum but it seem end xp not 5 or 0 on last digit breaks xp calculation on endscreen and freezes game
  mov word ptr [rcx+20+2],#100 // * 0.14.128
  mov word ptr [rcx+20+4],#25
  mov word ptr [rcx+20+6],#25
  mov word ptr [rcx+20+8],#25
  mov word ptr [rcx+20+A],#75
  mov word ptr [rcx+20+C],#50
  mov word ptr [rcx+20+E],#25
  mov word ptr [rcx+20+10],#25
  mov word ptr [rcx+20+12],#15  // assist
  mov word ptr [rcx+20+14],#25
  mov word ptr [rcx+20+16],#35
  mov word ptr [rcx+20+18],#50
  mov word ptr [rcx+20+1A],#50
  mov word ptr [rcx+20+1C],#50
  mov word ptr [rcx+20+1E],#75
  mov word ptr [rcx+20+20],#50
  mov word ptr [rcx+20+22],#50
  mov word ptr [rcx+20+24],#75
  mov word ptr [rcx+20+26],#25
  mov word ptr [rcx+20+28],#25
  mov word ptr [rcx+20+2A],#50
  mov word ptr [rcx+20+2C],#100
  mov word ptr [rcx+20+2E],#50
  mov word ptr [rcx+20+30],#1  //kill actor
  mov word ptr [rcx+20+32],#250
  mov word ptr [rcx+20+34],#25
  mov word ptr [rcx+20+36],#15
  mov word ptr [rcx+20+38],#25
  mov word ptr [rcx+20+3A],#100
  mov word ptr [rcx+20+3C],#15
  mov word ptr [rcx+20+3E],#25
  mov word ptr [rcx+20+40],#15
  mov word ptr [rcx+20+42],#50
  mov word ptr [rcx+20+44],#15
  mov word ptr [rcx+20+46],#50
  mov word ptr [rcx+20+48],#50
  mov word ptr [rcx+20+4A],#5
  mov word ptr [rcx+20+4C],#20
  mov word ptr [rcx+20+4E],#200
  mov word ptr [rcx+20+50],#20
  mov word ptr [rcx+20+52],#20 // * 0.14.128
  mov word ptr [rcx+20+54],#25
  jmp code
  // end

    // clean mega xp
megaXP:
  cmp word ptr [rcx+20],#4000
  je code
  mov word ptr [rcx+20],#4000  // 4096 is maximum but it seem end xp not 5 or 0 on last digit breaks xp calculation on endscreen and freezes game
  mov word ptr [rcx+20+2],#0 // * 0.14.128
  mov word ptr [rcx+20+4],#0
  mov word ptr [rcx+20+6],#0
  mov word ptr [rcx+20+8],#0
  mov word ptr [rcx+20+A],#0
  mov word ptr [rcx+20+C],#0
  mov word ptr [rcx+20+E],#0
  mov word ptr [rcx+20+10],#0
  mov word ptr [rcx+20+12],#4000  // assist
  mov word ptr [rcx+20+14],#0
  mov word ptr [rcx+20+16],#0
  mov word ptr [rcx+20+18],#0
  mov word ptr [rcx+20+1A],#0
  mov word ptr [rcx+20+1C],#0
  mov word ptr [rcx+20+1E],#0
  mov word ptr [rcx+20+20],#0
  mov word ptr [rcx+20+22],#0
  mov word ptr [rcx+20+24],#0
  mov word ptr [rcx+20+26],#0
  mov word ptr [rcx+20+28],#0
  mov word ptr [rcx+20+2A],#0
  mov word ptr [rcx+20+2C],#0
  mov word ptr [rcx+20+2E],#0
  mov word ptr [rcx+20+30],#0  //kill actor
  mov word ptr [rcx+20+32],#0
  mov word ptr [rcx+20+34],#0
  mov word ptr [rcx+20+36],#0
  mov word ptr [rcx+20+38],#0
  mov word ptr [rcx+20+3A],#0
  mov word ptr [rcx+20+3C],#0
  mov word ptr [rcx+20+3E],#0
  mov word ptr [rcx+20+40],#0
  mov word ptr [rcx+20+42],#0
  mov word ptr [rcx+20+44],#0
  mov word ptr [rcx+20+46],#0
  mov word ptr [rcx+20+48],#0
  mov word ptr [rcx+20+4A],#0
  mov word ptr [rcx+20+4C],#0
  mov word ptr [rcx+20+4E],#0
  mov word ptr [rcx+20+50],#0
  mov word ptr [rcx+20+52],#0 // * 0.14.128
  mov word ptr [rcx+20+54],#0
  jmp code
  // end

code:
  movzx ebx,word ptr [rcx+20]
  xor r8d,r8d
  jmp return

toggleMEGA:
  dd #1

basekill:
  dw #0

xpbasekill:
  jmp newmem
  nop 2
return:
registersymbol(xpbasekill)
registersymbol(basekill)
registersymbol(toggleMEGA)

[DISABLE]

xpbasekill:
  db 0F B7 59 20 45 33 C0

unregistersymbol(xpbasekill)
unregistersymbol(basekill)
unregistersymbol(toggleMEGA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: project.dll+3957C56

project.dll+3957C2B: 44 39 A9 E0 00 00 00  - cmp [rcx+000000E0],r13d
project.dll+3957C32: 75 05                 - jne project.dll+3957C39
project.dll+3957C34: E8 B7 50 BC FC        - call project.il2cpp_runtime_class_init
project.dll+3957C39: 33 C9                 - xor ecx,ecx
project.dll+3957C3B: E8 30 88 4C 00        - call project.dll+3E20470
project.dll+3957C40: 48 85 C0              - test rax,rax
project.dll+3957C43: 0F 84 41 1A 00 00     - je project.dll+395968A
project.dll+3957C49: 48 8B 48 20           - mov rcx,[rax+20]
project.dll+3957C4D: 48 85 C9              - test rcx,rcx
project.dll+3957C50: 0F 84 34 1A 00 00     - je project.dll+395968A
// ---------- INJECTING HERE ----------
project.dll+3957C56: 0F B7 71 20           - movzx esi,word ptr [rcx+20]
// ---------- DONE INJECTING  ----------
project.dll+3957C5A: 49 8B 0E              - mov rcx,[r14]
project.dll+3957C5D: 4D 8B 7F 20           - mov r15,[r15+20]
project.dll+3957C61: 48 85 C9              - test rcx,rcx
project.dll+3957C64: 0F 84 20 1A 00 00     - je project.dll+395968A
project.dll+3957C6A: 33 D2                 - xor edx,edx
project.dll+3957C6C: E8 CF 8C FA FC        - call project.dll+900940
project.dll+3957C71: 48 8B 0D F8 B0 34 01  - mov rcx,[project.dll+4CA2D70]
project.dll+3957C78: 48 8B D8              - mov rbx,rax
project.dll+3957C7B: E8 D0 04 BB FC        - call project.mono_array_element_size+3370
project.dll+3957C80: 4C 8B F0              - mov r14,rax
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>640</ID>
                  <Description>"pointer"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>641</ID>
                      <Description>"basekill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>20</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>687</ID>
                      <Description>"??? (0.14.128)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>22</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>642</ID>
                      <Description>"clear kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>24</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>643</ID>
                      <Description>"headshot"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>26</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>644</ID>
                      <Description>"revenge"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>28</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>645</ID>
                      <Description>"major stop streak"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>2A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>646</ID>
                      <Description>"stop streak"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>2C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>647</ID>
                      <Description>"grenade"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>2E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>648</ID>
                      <Description>"knife"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>649</ID>
                      <Description>"assist"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>32</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>650</ID>
                      <Description>"double kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>34</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>651</ID>
                      <Description>"tripple kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>36</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>652</ID>
                      <Description>"multikill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>38</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>653</ID>
                      <Description>"king slayer"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>3A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>654</ID>
                      <Description>"one shot multikill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>3C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>655</ID>
                      <Description>"through wall"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>3E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>656</ID>
                      <Description>"no scope"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>40</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>657</ID>
                      <Description>"last bullet"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>42</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>658</ID>
                      <Description>"on the verge of death"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>44</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>659</ID>
                      <Description>"in air kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>46</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>660</ID>
                      <Description>"in slide kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>48</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>661</ID>
                      <Description>"team wiped"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>4A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>662</ID>
                      <Description>"first blood"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>4C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>663</ID>
                      <Description>"one shot one kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>4E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>664</ID>
                      <Description>"kill actor ???"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>50</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>665</ID>
                      <Description>"used nuke"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>52</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>666</ID>
                      <Description>"weapon bash"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>54</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>667</ID>
                      <Description>"armor destroy (combat master + battle royale?)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>56</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>668</ID>
                      <Description>"downed  (combat master + battle royale?)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>58</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>669</ID>
                      <Description>"no scope 360"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>5A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>670</ID>
                      <Description>"no attachments"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>5C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>671</ID>
                      <Description>"long shot"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>5E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>672</ID>
                      <Description>"hip fire"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>60</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>673</ID>
                      <Description>"gun promotion"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>62</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>674</ID>
                      <Description>"on zipline kill"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>64</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>675</ID>
                      <Description>"bomb planted"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>66</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>676</ID>
                      <Description>"use minigun"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>68</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>677</ID>
                      <Description>"harakiri (suicide with explosive for example)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>6A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>678</ID>
                      <Description>"???"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>6C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>679</ID>
                      <Description>"???"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>6E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>682</ID>
                      <Description>"???"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>70</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>683</ID>
                      <Description>"??? (0.14.128)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>72</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>688</ID>
                      <Description>"???"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>2 Bytes</VariableType>
                      <Address>basekill</Address>
                      <Offsets>
                        <Offset>74</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>680</ID>
                  <Description>"clean MEGA XP"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:normal xp (writes default values)
1:mega xp (writes 4000 kill/assist)
2:off (just get the pointer)
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>toggleMEGA</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>987</ID>
              <Description>"super passive bots (no slide, jump, shooting, rotation, sight)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-08-25
  Author : ZoDDeL

  This script does blah blah blah

// 0D 00 00 F3 0F 10 70 30
// 05 00 00 F3 0F 10 70 30
// 06 00 00 F3 0F 10 70 30

diff 1 = 1
diff 2 = 0.8000000119
diff 3 = 0.5
diff 4 = 0.3000000119
diff 5 = 0.1000000015


48 8B F0 49 8B 47 28 48 85 C0 0F 84 * * * * F3 0F 10 70 30
                                            F3 0F 10 70 30 48 8B 0D * * * * 83 B9 E0 00 00 00 00 75 05 E8 * * * * 0F 5A C6 33 D2 E8 * * * * 48 8B D8 48 8B 0D * * * * 83 B9 E0 00 00 00 00
                                   05 00 00 F3 0F 10 70 30
                                            F3 0F 10 70 30 48 8B 0D * * * * 83 B9 D0 00 00 00 00 75 05 E8 * * * * 0F 5A C6 33 D2 E8 * * * * 48 8B D8 48 8B 0D * * * * 83 B9 D0 00 00 00 00
}

[ENABLE]

aobscanmodule(botINJECT,Project.dll,F3 0F 10 70 30 48 8B 0D * * * * 83 B9 D0 00 00 00 00 75 05 E8 * * * * 0F 5A C6 33 D2 E8 * * * * 48 8B D8 48 8B 0D * * * * 83 B9 D0 00 00 00 00) // should be unique
alloc(newmem,$1000,botINJECT)

label(code)
label(return)

newmem:


code:
  mov [rax+30],(float)2000  // reaction time
  mov [rax+30+4],(float)0  // sight angle
  mov [rax+30+8],(float)0  // move rotation speed
  mov [rax+30+C],(float)0  // shoot rotation speed
  //mov [rax+30+18],(float)0  // ???
  mov [rax+30+1C],(float)0  // re-path rate
  mov [rax+30+28],#0  //  chance lethal
  mov [rax+30+2C],#0  //  chance slide
  mov [rax+30+30],#0  //  chance jump
  movss xmm6,[rax+30]
  jmp return



botINJECT:
  jmp newmem
return:
registersymbol(botINJECT)
[DISABLE]

botINJECT:
  db F3 0F 10 70 30

unregistersymbol(botINJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+398B7A5

Project.dll+398B774: 0F 84 AD 06 00 00     - je Project.dll+398BE27
Project.dll+398B77A: 83 78 18 00           - cmp dword ptr [rax+18],00
Project.dll+398B77E: 0F 8E 1F F4 FF FF     - jng Project.dll+398ABA3
Project.dll+398B784: BA 02 00 00 00        - mov edx,00000002
Project.dll+398B789: 48 8B 0D D8 80 6F 01  - mov rcx,[Project.dll+5083868]
Project.dll+398B790: E8 1B AD BE FC        - call Project.dll+5764B0
Project.dll+398B795: 48 8B F0              - mov rsi,rax
Project.dll+398B798: 49 8B 47 28           - mov rax,[r15+28]
Project.dll+398B79C: 48 85 C0              - test rax,rax
Project.dll+398B79F: 0F 84 7D 06 00 00     - je Project.dll+398BE22
// ---------- INJECTING HERE ----------
Project.dll+398B7A5: F3 0F 10 70 30        - movss xmm6,[rax+30]
// ---------- DONE INJECTING  ----------
Project.dll+398B7AA: 48 8B 0D DF DB 6E 01  - mov rcx,[Project.dll+5079390]
Project.dll+398B7B1: 83 B9 E0 00 00 00 00  - cmp dword ptr [rcx+000000E0],00
Project.dll+398B7B8: 75 05                 - jne Project.dll+398B7BF
Project.dll+398B7BA: E8 31 D7 BD FC        - call Project.SCOvcUZiwUc
Project.dll+398B7BF: 0F 5A C6              - cvtps2pd xmm0,xmm6
Project.dll+398B7C2: 33 D2                 - xor edx,edx
Project.dll+398B7C4: E8 07 75 D0 FE        - call Project.dll+2692CD0
Project.dll+398B7C9: 48 8B D8              - mov rbx,rax
Project.dll+398B7CC: 48 8B 0D 6D 3C 64 01  - mov rcx,[Project.dll+4FCF440]
Project.dll+398B7D3: 83 B9 E0 00 00 00 00  - cmp dword ptr [rcx+000000E0],00
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1053</ID>
              <Description>"infinite matchtime (not for SnD / NEVER USE WITH HUMAN PLAYERS)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-09-05
  Author : ZoDDeL

  This script does blah blah blah

  credits to norolls
  for sharing the original AOB

48 83 C0 02 3B 41 18 73 5E 48 8D 04 40 45 33 C0 0F 28 CE F3 0F 11 74 C1 20 0F * * E8 * * * * 84 C0 74 * 48 8B 13 48 8B CB

F3 0F 11 74 C1 20 0F 28 C7 E8 07
F3 0F 11 74 C1 20 0F 28 C7 E8 37
F3 0F 11 74 C1 20 0F 28 C7 E8 87


blue -18(hex) = red
}

[ENABLE]

aobscanmodule(matchTime,Project.dll,F3 0F 11 74 C1 20 0F 28 C7 E8 87) // should be unique
alloc(newmem,$1000,matchTime)

label(code)
label(return)

newmem:
  movss xmm6,[infiniteTime]

code:
  movss [rcx+rax*8+20],xmm6
  jmp return

infiniteTime:
dd (float)0

matchTime:
  jmp newmem
  nop
return:
registersymbol(matchTime)

[DISABLE]

matchTime:
  db F3 0F 11 74 C1 20

unregistersymbol(matchTime)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+91B2CB

Project.dll+91B2A8: 48 8B 88 A0 00 00 00  - mov rcx,[rax+000000A0]
Project.dll+91B2AF: 48 85 C9              - test rcx,rcx
Project.dll+91B2B2: 74 65                 - je Project.dll+91B319
Project.dll+91B2B4: 48 63 43 34           - movsxd  rax,dword ptr [rbx+34]
Project.dll+91B2B8: 48 83 C0 02           - add rax,02
Project.dll+91B2BC: 3B 41 18              - cmp eax,[rcx+18]
Project.dll+91B2BF: 73 5E                 - jae Project.dll+91B31F
Project.dll+91B2C1: 48 8D 04 40           - lea rax,[rax+rax*2]
Project.dll+91B2C5: 45 33 C0              - xor r8d,r8d
Project.dll+91B2C8: 0F 28 CE              - movaps xmm1,xmm6
// ---------- INJECTING HERE ----------
Project.dll+91B2CB: F3 0F 11 74 C1 20     - movss [rcx+rax*8+20],xmm6
// ---------- DONE INJECTING  ----------
Project.dll+91B2D1: 0F 28 C7              - movaps xmm0,xmm7
Project.dll+91B2D4: E8 07 64 04 00        - call Project.dll+9616E0
Project.dll+91B2D9: 84 C0                 - test al,al
Project.dll+91B2DB: 74 2C                 - je Project.dll+91B309
Project.dll+91B2DD: 48 8B 13              - mov rdx,[rbx]
Project.dll+91B2E0: 48 8B CB              - mov rcx,rbx
Project.dll+91B2E3: 48 8B 82 78 01 00 00  - mov rax,[rdx+00000178]
Project.dll+91B2EA: 48 8B 92 80 01 00 00  - mov rdx,[rdx+00000180]
Project.dll+91B2F1: FF D0                 - call rax
Project.dll+91B2F3: 48 85 C0              - test rax,rax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1136</ID>
              <Description>"no spawnprotection"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-09-07
  Author : ZoDDeL

  This script does blah blah blah

  credits to KFSAD1337
  for sharing the info

B9 39 00 00 00 4C 8B C0 48 83 C4 20 5B E9 * * * * E8 * * * * CC CC CC CC CC CC CC CC CC CC CC CC CC CC 40 53 48 83 EC 20

B9 * * 00 00 4C 8B C0 48 83 C4 20 5B E9 * * * * E8 * * * * CC CC CC CC CC CC CC CC CC CC CC CC CC CC 40 53 48 83 EC 20 80 3D * * * * 00 48 8B D9 75 * 48 8D 0D * * * * E8 * * * * C6 05 * * * * 01 33 D2 48 8B CB E8 * * * *
                                        //
B9 * * 00 00 4C 8B C0 48 83 C4 20 5B E9 23 * * * E8 * * * * CC CC CC CC CC CC CC CC CC CC CC CC CC CC 40 53 48 83 EC 20 80 3D * * * * 00 48 8B D9 75 * 48 8D 0D * * * * E8 * * * * C6 05 * * * * 01 33 D2 48 8B CB E8 * * * *
                                        D3

                                        C3
                                        73
                                        E3
}

[ENABLE]

aobscanmodule(spawnprotection,Project.dll,B9 * * 00 00 4C 8B C0 48 83 C4 20 5B E9 E3 * * * E8 * * * * CC CC CC CC CC CC CC CC CC CC CC CC CC CC 40 53 48 83 EC 20 80 3D * * * * 00 48 8B D9 75 * 48 8D 0D * * * * E8 * * * * C6 05 * * * * 01 33 D2 48 8B CB E8 * * * *) // should be unique
alloc(newmem,$1000,spawnprotection)

label(code)
label(return)

newmem:

code:
  mov al,0
  ret
  jmp return

spawnprotection+25:
  jmp newmem
  nop
return:
registersymbol(spawnprotection)

[DISABLE]

spawnprotection+25:
  db 40 53 48 83 EC 20

unregistersymbol(spawnprotection)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+3A521E0

Project.dll+3A521D6: CC                    - int 3 
Project.dll+3A521D7: CC                    - int 3 
Project.dll+3A521D8: CC                    - int 3 
Project.dll+3A521D9: CC                    - int 3 
Project.dll+3A521DA: CC                    - int 3 
Project.dll+3A521DB: CC                    - int 3 
Project.dll+3A521DC: CC                    - int 3 
Project.dll+3A521DD: CC                    - int 3 
Project.dll+3A521DE: CC                    - int 3 
Project.dll+3A521DF: CC                    - int 3 
// ---------- INJECTING HERE ----------
Project.dll+3A521E0: 40 53                 - push rbx
// ---------- DONE INJECTING  ----------
Project.dll+3A521E2: 48 83 EC 20           - sub rsp,20
Project.dll+3A521E6: 80 3D D2 B7 95 01 00  - cmp byte ptr [Project.dll+53AD9BF],00
Project.dll+3A521ED: 48 8B D9              - mov rbx,rcx
Project.dll+3A521F0: 75 13                 - jne Project.dll+3A52205
Project.dll+3A521F2: 48 8D 0D 67 E6 6B 01  - lea rcx,[Project.dll+5110860]
Project.dll+3A521F9: E8 E2 CD B2 FC        - call Project.dll+57EFE0
Project.dll+3A521FE: C6 05 BA B7 95 01 01  - mov byte ptr [Project.dll+53AD9BF],01
Project.dll+3A52205: 33 D2                 - xor edx,edx
Project.dll+3A52207: 48 8B CB              - mov rcx,rbx
Project.dll+3A5220A: E8 C1 9A FF FF        - call Project.dll+3A4BCD0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1332</ID>
              <Description>"inf jump (affects all in lobby / works online too for player only)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-09-30
  Author : ZoDDeL

  This script does blah blah blah
2A A2 FC 40 88 BB 8C 00 00 00
6D 9E FC

FF 9A FC
D6 9A FC

}

[ENABLE]

//aobscanmodule(infJump,Project.dll,6D 9E FC 40 88 BB 8C 00 00 00) // should be unique
aobscanmodule(infJump,Project.dll,D6 9A FC 40 88 BB 8C 00 00 00) // should be unique
alloc(newmem,$1000,infJump)

label(code)
label(return)

newmem:

code:
  mov [rbx+0000008C],#0 //dil // 1 = no jump / 0 = inf jump
  jmp return

infJump+03:
  jmp newmem
  nop 2
return:
registersymbol(infJump)

[DISABLE]

infJump+03:
  db 40 88 BB 8C 00 00 00

unregistersymbol(infJump)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+35EB540

Project.dll+35EB519: 33 D2                 - xor edx,edx
Project.dll+35EB51B: 48 8B CB              - mov rcx,rbx
Project.dll+35EB51E: E8 4D C1 FE FF        - call Project.dll+35D7670
Project.dll+35EB523: 48 85 C0              - test rax,rax
Project.dll+35EB526: 74 2A                 - je Project.dll+35EB552
Project.dll+35EB528: 48 8B 15 A1 B2 58 01  - mov rdx,[Project.dll+4B767D0]
Project.dll+35EB52F: B9 1D 00 00 00        - mov ecx,0000001D
Project.dll+35EB534: 44 0F B6 CF           - movzx r9d,dil
Project.dll+35EB538: 4C 8B C0              - mov r8,rax
Project.dll+35EB53B: E8 30 2A A2 FC        - call Project.Kmhjok_hrxr+B230
// ---------- INJECTING HERE ----------
Project.dll+35EB540: 40 88 BB 8C 00 00 00  - mov [rbx+0000008C],dil
// ---------- DONE INJECTING  ----------
Project.dll+35EB547: 48 8B 5C 24 30        - mov rbx,[rsp+30]
Project.dll+35EB54C: 48 83 C4 20           - add rsp,20
Project.dll+35EB550: 5F                    - pop rdi
Project.dll+35EB551: C3                    - ret 
Project.dll+35EB552: E8 99 48 E9 FC        - call Project.PZGTUtrXciP+B0
Project.dll+35EB557: CC                    - int 3 
Project.dll+35EB558: CC                    - int 3 
Project.dll+35EB559: CC                    - int 3 
Project.dll+35EB55A: CC                    - int 3 
Project.dll+35EB55B: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1342</ID>
              <Description>"inf slide (affects all in lobby / start slide and hold forward W)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-09-30
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(crouchB,Project.dll,40 88 BB 88 00 00 00) // should be unique
alloc(newmem,$1000,crouchB)

label(code)
label(return)

newmem:

code:
  mov dword ptr [rbx+00000088],0 //dil
  jmp return

crouchB:
  jmp newmem
  nop 2
return:
registersymbol(crouchB)

[DISABLE]

crouchB:
  db 40 88 BB 88 00 00 00

unregistersymbol(crouchB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+35E7080

Project.dll+35E7059: 33 D2                 - xor edx,edx
Project.dll+35E705B: 48 8B CB              - mov rcx,rbx
Project.dll+35E705E: E8 0D 06 FF FF        - call Project.dll+35D7670
Project.dll+35E7063: 48 85 C0              - test rax,rax
Project.dll+35E7066: 74 2A                 - je Project.dll+35E7092
Project.dll+35E7068: 48 8B 15 61 F7 58 01  - mov rdx,[Project.dll+4B767D0]
Project.dll+35E706F: B9 1F 00 00 00        - mov ecx,0000001F
Project.dll+35E7074: 44 0F B6 CF           - movzx r9d,dil
Project.dll+35E7078: 4C 8B C0              - mov r8,rax
Project.dll+35E707B: E8 F0 6E A2 FC        - call Project.Kmhjok_hrxr+B230
// ---------- INJECTING HERE ----------
Project.dll+35E7080: 40 88 BB 88 00 00 00  - mov [rbx+00000088],dil
// ---------- DONE INJECTING  ----------
Project.dll+35E7087: 48 8B 5C 24 30        - mov rbx,[rsp+30]
Project.dll+35E708C: 48 83 C4 20           - add rsp,20
Project.dll+35E7090: 5F                    - pop rdi
Project.dll+35E7091: C3                    - ret 
Project.dll+35E7092: E8 59 8D E9 FC        - call Project.PZGTUtrXciP+B0
Project.dll+35E7097: CC                    - int 3 
Project.dll+35E7098: CC                    - int 3 
Project.dll+35E7099: CC                    - int 3 
Project.dll+35E709A: CC                    - int 3 
Project.dll+35E709B: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1483</ID>
              <Description>"no recoil (affects bots / works on server too)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-10-15
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(recoilA,Project.dll,F3 0F 11 B3 B0 00 00 00 0F) // should be unique
alloc(newmem,$1000,recoilA)

label(code)
label(return)

newmem:
  movss xmm6,[norecoilA]

code:
  movss [rbx+000000B0],xmm6
  jmp return

norecoilA:
dd (float)0

recoilA:
  jmp newmem
  nop 3
return:
registersymbol(recoilA)

[DISABLE]

recoilA:
  db F3 0F 11 B3 B0 00 00 00

unregistersymbol(recoilA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+35E40C2

Project.dll+35E4086: 48 8D 0D 5B 51 55 01     - lea rcx,[Project.dll+4B391E8]
Project.dll+35E408D: E8 6E BB E9 FC           - call Project.fvSPolXRFZe+2B0
Project.dll+35E4092: 48 8D 0D 7F 10 58 01     - lea rcx,[Project.dll+4B65118]
Project.dll+35E4099: E8 62 BB E9 FC           - call Project.fvSPolXRFZe+2B0
Project.dll+35E409E: C6 05 36 1D 7E 01 01     - mov byte ptr [Project.dll+4DC5DDB],01
Project.dll+35E40A5: F3 0F 58 B3 B0 00 00 00  - addss xmm6,[rbx+000000B0]
Project.dll+35E40AD: F3 0F 10 15 EB 1A 7A 00  - movss xmm2,[Project.dll+3D85BA0]
Project.dll+35E40B5: 0F 57 C9                 - xorps xmm1,xmm1
Project.dll+35E40B8: 48 89 6C 24 50           - mov [rsp+50],rbp
Project.dll+35E40BD: 48 89 74 24 58           - mov [rsp+58],rsi
// ---------- INJECTING HERE ----------
Project.dll+35E40C2: F3 0F 11 B3 B0 00 00 00  - movss [rbx+000000B0],xmm6
// ---------- DONE INJECTING  ----------
Project.dll+35E40CA: 0F 28 C6                 - movaps xmm0,xmm6
Project.dll+35E40CD: 4C 8B 0D 84 D3 54 01     - mov r9,[Project.dll+4B31458]
Project.dll+35E40D4: E8 77 31 A2 FD           - call Project.dll+1007250
Project.dll+35E40D9: 48 83 BB 90 01 00 00 00  - cmp qword ptr [rbx+00000190],00
Project.dll+35E40E1: 0F 85 53 01 00 00        - jne Project.dll+35E423A
Project.dll+35E40E7: 48 8B 0D FA 31 55 01     - mov rcx,[Project.dll+4B372E8]
Project.dll+35E40EE: E8 9D BC E9 FC           - call Project.PZGTUtrXciP+50
Project.dll+35E40F3: 48 8B F0                 - mov rsi,rax
Project.dll+35E40F6: 48 85 C0                 - test rax,rax
Project.dll+35E40F9: 0F 84 8F 01 00 00        - je Project.dll+35E428E
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>636</ID>
              <Description>"penetrate all obstacles/walls + marker (player + bots in lobby / player only marker on server)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2023-12-31
  Author : ZoDDeL

  This script does blah blah blah
}
// aobscanmodule(fastkillmarker,UnityPlayer.dll,74 06 80 7F 1C 00)
[ENABLE]

aobscanmodule(marker,engine.dll,74 06 80 7F 1C 00) // should be unique
alloc(newmem,$1000,marker)

label(code)
label(return)

newmem:

code:
  //je engine.dll+590D72
  cmp byte ptr [rdi+1C],00
  jmp return

marker:
  jmp newmem
  nop
return:
registersymbol(marker)

[DISABLE]

marker:
  db 74 06 80 7F 1C 00

unregistersymbol(marker)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: engine.dll+590D6A

engine.dll+590D47: 49 8B F0           - mov rsi,r8
engine.dll+590D4A: 48 8B EA           - mov rbp,rdx
engine.dll+590D4D: 48 8B F9           - mov rdi,rcx
engine.dll+590D50: 4C 3B 49 10        - cmp r9,[rcx+10]
engine.dll+590D54: 74 7E              - je engine.dll+590DD4
engine.dll+590D56: 49 8B 00           - mov rax,[r8]
engine.dll+590D59: 48 8D 54 24 40     - lea rdx,[rsp+40]
engine.dll+590D5E: 49 8B C8           - mov rcx,r8
engine.dll+590D61: FF 90 30 01 00 00  - call qword ptr [rax+00000130]
engine.dll+590D67: F6 00 04           - test byte ptr [rax],04
// ---------- INJECTING HERE ----------
engine.dll+590D6A: 74 06              - je engine.dll+590D72
// ---------- DONE INJECTING  ----------
engine.dll+590D6C: 80 7F 1C 00        - cmp byte ptr [rdi+1C],00
engine.dll+590D70: 74 62              - je engine.dll+590DD4
engine.dll+590D72: 33 C0              - xor eax,eax
engine.dll+590D74: 66 83 7B 08 05     - cmp word ptr [rbx+08],05
engine.dll+590D79: 48 0F 44 C3        - cmove rax,rbx
engine.dll+590D7D: 48 85 C0           - test rax,rax
engine.dll+590D80: 74 12              - je engine.dll+590D94
engine.dll+590D82: 48 8B 4B 10        - mov rcx,[rbx+10]
engine.dll+590D86: 48 85 C9           - test rcx,rcx
engine.dll+590D89: 74 09              - je engine.dll+590D94
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>424</ID>
          <Description>"player only (affects only you)"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>366</ID>
              <Description>"weapon + player instant levelup"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2023-05-11
  Author : ZoDDeL
  youtube.com/ZoDDeL

  This script does blah blah blah
}

// player rank 4byte dec array: 2650 5200 7500 7500 7500 7500 7500 7500 7500 7500 15000 15000 15000 15000 15000 15000 15000 15000 15000 15000 30000 30000 30000 30000 30000 30000 30000 30000 30000 30000 70000 70000 70000 70000 70000 70000 70000 70000 70000 70000 225000 225000 225000 225000 225000 225000 225000 225000 225000 225000 400000 400000 400000 400000
// old? mp5 level 4byte dec array: 2500 5000 5000 5000 5000 5000 5000 5000 5000 5000 11250 11250 11250 11250 11250 11250 11250 11250 11250 11250 18750 18750 18750 18750 18750 18750 18750 18750 18750 18750 25000 25000 25000 25000 25000 25000 25000 25000 25000 25000 37500 37500 37500 37500 37500 37500 37500 37500 37500 37500 60000 60000 60000 60000 60000 60000 60000 60000 60000 60000 112500 112500 112500 112500 112500 112500 112500 112500 112500 112500 190000 190000 190000 190000 190000 312500 312500 312500 312500
// new? mp5 level 4byte dec array: 5 5000 5000 5000 5000 5000 5000 5000 5000 5000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 15000 15000 15000 15000 15000 15000 15000 15000 15000 15000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 30000 30000 30000 30000 30000 30000 30000 30000 30000 30000 40000 40000 40000 40000 40000 50000 50000 50000 50000 4147483646
// KTech Knife 4byte dec array: 2500 2500 2500 2500 2500 2500 2500 2500 2500 2500 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 7500 7500 7500 7500 7500 7500 7500 7500 7500 7500 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 15000 15000 15000 15000 15000 15000 15000 15000 15000 15000 20000 20000 20000 20000 20000 31250 31250 31250 31250 4147483646
// p90 : 2500 5000 5000 5000 5000 5000 5000 5000 5000 5000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 15000 15000 15000 15000 15000 15000 15000 15000 15000 15000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 20000 30000 30000 30000 30000 30000 30000 30000 30000 30000 30000 40000 40000 40000 40000 40000 50000 50000 50000 50000 4147483646
// player rank final level 4byte dec 2140483647

// "GameAssembly.dll"+1AB87DA
[ENABLE]

aobscanmodule(weaponLV,project.dll,8B 44 99 20 48 8B 5C 24 30) // should be unique
alloc(newmem,$2000,weaponLV)

label(code)
label(return)

newmem:
  cmp [rcx+rbx*4+20],#2500 // checks for min value XP
  jl code
  cmp [rcx+rbx*4+20],#400000 // checks for max value XP
  jg code
  jmp check

check:  // checks for weapon max level value
  cmp dword ptr [toggleW],#1  // checks for instant weapon toggle
  jne checkPR

//lv 1
  cmp [rcx+rbx*4+20+13C],F73593FE // 4147483646 / -147483650
  je true
//lv 2
  cmp [rcx+rbx*4+20+138],F73593FE // 4147483646 / -147483650
  je true
//lv 3
  cmp [rcx+rbx*4+20+134],F73593FE // 4147483646 / -147483650
  je true
//lv 4
  cmp [rcx+rbx*4+20+130],F73593FE // 4147483646 / -147483650
  je true

//lv 5
  cmp [rcx+rbx*4+20+12C],F73593FE // 4147483646 / -147483650
  je true
//lv 6
  cmp [rcx+rbx*4+20+128],F73593FE // 4147483646 / -147483650
  je true
//lv 7
  cmp [rcx+rbx*4+20+124],F73593FE // 4147483646 / -147483650
  je true
//lv 8
  cmp [rcx+rbx*4+20+120],F73593FE // 4147483646 / -147483650
  je true

//lv 9
  cmp [rcx+rbx*4+20+11C],F73593FE // 4147483646 / -147483650
  je true
//lv 10
  cmp [rcx+rbx*4+20+118],F73593FE // 4147483646 / -147483650
  je true
//lv 11
  cmp [rcx+rbx*4+20+114],F73593FE // 4147483646 / -147483650
  je true
//lv 12
  cmp [rcx+rbx*4+20+110],F73593FE // 4147483646 / -147483650
  je true

//lv 13
  cmp [rcx+rbx*4+20+10C],F73593FE // 4147483646 / -147483650
  je true
//lv 14
  cmp [rcx+rbx*4+20+108],F73593FE // 4147483646 / -147483650
  je true
//lv 15
  cmp [rcx+rbx*4+20+104],F73593FE // 4147483646 / -147483650
  je true
//lv 16
  cmp [rcx+rbx*4+20+100],F73593FE // 4147483646 / -147483650
  je true

//lv 17
  cmp [rcx+rbx*4+20+FC],F73593FE // 4147483646 / -147483650
  je true
//lv 18
  cmp [rcx+rbx*4+20+F8],F73593FE // 4147483646 / -147483650
  je true
//lv 19
  cmp [rcx+rbx*4+20+F4],F73593FE // 4147483646 / -147483650
  je true
//lv 20
  cmp [rcx+rbx*4+20+F0],F73593FE // 4147483646 / -147483650
  je true

//lv 21
  cmp [rcx+rbx*4+20+EC],F73593FE // 4147483646 / -147483650
  je true
//lv 22
  cmp [rcx+rbx*4+20+E8],F73593FE // 4147483646 / -147483650
  je true
//lv 23
  cmp [rcx+rbx*4+20+E4],F73593FE // 4147483646 / -147483650
  je true
//lv 24
  cmp [rcx+rbx*4+20+E0],F73593FE // 4147483646 / -147483650
  je true

//lv 25
  cmp [rcx+rbx*4+20+DC],F73593FE // 4147483646 / -147483650
  je true
//lv 26
  cmp [rcx+rbx*4+20+D8],F73593FE // 4147483646 / -147483650
  je true
//lv 27
  cmp [rcx+rbx*4+20+D4],F73593FE // 4147483646 / -147483650
  je true
//lv 28
  cmp [rcx+rbx*4+20+D0],F73593FE // 4147483646 / -147483650
  je true

//lv 29
  cmp [rcx+rbx*4+20+CC],F73593FE // 4147483646 / -147483650
  je true
//lv 30
  cmp [rcx+rbx*4+20+C8],F73593FE // 4147483646 / -147483650
  je true
//lv 31
  cmp [rcx+rbx*4+20+C4],F73593FE // 4147483646 / -147483650
  je true
//lv 32
  cmp [rcx+rbx*4+20+C0],F73593FE // 4147483646 / -147483650
  je true

//lv 33
  cmp [rcx+rbx*4+20+BC],F73593FE // 4147483646 / -147483650
  je true
//lv 34
  cmp [rcx+rbx*4+20+B8],F73593FE // 4147483646 / -147483650
  je true
//lv 35
  cmp [rcx+rbx*4+20+B4],F73593FE // 4147483646 / -147483650
  je true
//lv 36
  cmp [rcx+rbx*4+20+B0],F73593FE // 4147483646 / -147483650
  je true

//lv 37
  cmp [rcx+rbx*4+20+AC],F73593FE // 4147483646 / -147483650
  je true
//lv 38
  cmp [rcx+rbx*4+20+A8],F73593FE // 4147483646 / -147483650
  je true
//lv 39
  cmp [rcx+rbx*4+20+A4],F73593FE // 4147483646 / -147483650
  je true
//lv 40
  cmp [rcx+rbx*4+20+A0],F73593FE // 4147483646 / -147483650
  je true

//lv 41
  cmp [rcx+rbx*4+20+9C],F73593FE // 4147483646 / -147483650
  je true
//lv 42
  cmp [rcx+rbx*4+20+98],F73593FE // 4147483646 / -147483650
  je true
//lv 43
  cmp [rcx+rbx*4+20+94],F73593FE // 4147483646 / -147483650
  je true
//lv 44
  cmp [rcx+rbx*4+20+90],F73593FE // 4147483646 / -147483650
  je true

//lv 45
  cmp [rcx+rbx*4+20+8C],F73593FE // 4147483646 / -147483650
  je true
//lv 46
  cmp [rcx+rbx*4+20+88],F73593FE // 4147483646 / -147483650
  je true
//lv 47
  cmp [rcx+rbx*4+20+84],F73593FE // 4147483646 / -147483650
  je true
//lv 48
  cmp [rcx+rbx*4+20+80],F73593FE // 4147483646 / -147483650
  je true

//lv 49
  cmp [rcx+rbx*4+20+7C],F73593FE // 4147483646 / -147483650
  je true
//lv 50
  cmp [rcx+rbx*4+20+78],F73593FE // 4147483646 / -147483650
  je true
//lv 51
  cmp [rcx+rbx*4+20+74],F73593FE // 4147483646 / -147483650
  je true
//lv 52
  cmp [rcx+rbx*4+20+70],F73593FE // 4147483646 / -147483650
  je true

//lv 53
  cmp [rcx+rbx*4+20+6C],F73593FE // 4147483646 / -147483650
  je true
//lv 54
  cmp [rcx+rbx*4+20+68],F73593FE // 4147483646 / -147483650
  je true
//lv 55
  cmp [rcx+rbx*4+20+64],F73593FE // 4147483646 / -147483650
  je true
//lv 56
  cmp [rcx+rbx*4+20+60],F73593FE // 4147483646 / -147483650
  je true

//lv 57
  cmp [rcx+rbx*4+20+5C],F73593FE // 4147483646 / -147483650
  je true
//lv 58
  cmp [rcx+rbx*4+20+58],F73593FE // 4147483646 / -147483650
  je true
//lv 59
  cmp [rcx+rbx*4+20+54],F73593FE // 4147483646 / -147483650
  je true
//lv 60
  cmp [rcx+rbx*4+20+50],F73593FE // 4147483646 / -147483650
  je true

//lv 61
  cmp [rcx+rbx*4+20+4C],F73593FE // 4147483646 / -147483650
  je true
//lv 62
  cmp [rcx+rbx*4+20+48],F73593FE // 4147483646 / -147483650
  je true
//lv 63
  cmp [rcx+rbx*4+20+44],F73593FE // 4147483646 / -147483650
  je true
//lv 64
  cmp [rcx+rbx*4+20+40],F73593FE // 4147483646 / -147483650
  je true

//lv 65
  cmp [rcx+rbx*4+20+3C],F73593FE // 4147483646 / -147483650
  je true
//lv 66
  cmp [rcx+rbx*4+20+38],F73593FE // 4147483646 / -147483650
  je true
//lv 67
  cmp [rcx+rbx*4+20+34],F73593FE // 4147483646 / -147483650
  je true
//lv 68
  cmp [rcx+rbx*4+20+30],F73593FE // 4147483646 / -147483650
  je true

//lv 69
  cmp [rcx+rbx*4+20+2C],F73593FE // 4147483646 / -147483650
  je true
//lv 70
  cmp [rcx+rbx*4+20+28],F73593FE // 4147483646 / -147483650
  je true
//lv 71
  cmp [rcx+rbx*4+20+24],F73593FE // 4147483646 / -147483650
  je true
//lv 72
  cmp [rcx+rbx*4+20+20],F73593FE // 4147483646 / -147483650
  je true

//lv 73
  cmp [rcx+rbx*4+20+1C],F73593FE // 4147483646 / -147483650
  je true
//lv 74
  cmp [rcx+rbx*4+20+18],F73593FE // 4147483646 / -147483650
  je true
//lv 75
  cmp [rcx+rbx*4+20+14],F73593FE // 4147483646 / -147483650
  je true
//lv 76
  cmp [rcx+rbx*4+20+10],F73593FE // 4147483646 / -147483650
  je true

//lv 77
  cmp [rcx+rbx*4+20+C],F73593FE // 4147483646 / -147483650
  je true
//lv 78
  cmp [rcx+rbx*4+20+8],F73593FE // 4147483646 / -147483650
  je true
//lv 79
  cmp [rcx+rbx*4+20+4],F73593FE // 4147483646 / -147483650
  je true
//lv 80
//  cmp [rcx+rbx*4+20+0],F73593FE // 4147483646 / -147483650
//  je true
  jmp checkPR




checkPR: // checks for player rank max level value
  cmp dword ptr [toggleP],#1  // checks for instant playerRank toggle
  jne checkExtra

//lv 1
  cmp [rcx+rbx*4+20+D8],7F95303F // 2140483647
  je true
//lv 2
  cmp [rcx+rbx*4+20+D4],7F95303F // 2140483647
  je true
//lv 3
  cmp [rcx+rbx*4+20+D0],7F95303F // 2140483647
  je true
//lv 4
  cmp [rcx+rbx*4+20+CC],7F95303F // 2140483647
  je true

//lv 5
  cmp [rcx+rbx*4+20+C8],7F95303F // 2140483647
  je true
//lv 6
  cmp [rcx+rbx*4+20+C4],7F95303F // 2140483647
  je true
//lv 7
  cmp [rcx+rbx*4+20+C0],7F95303F // 2140483647
  je true
//lv 8
  cmp [rcx+rbx*4+20+BC],7F95303F // 2140483647
  je true

//lv 9
  cmp [rcx+rbx*4+20+B8],7F95303F // 2140483647
  je true
//lv 10
  cmp [rcx+rbx*4+20+B4],7F95303F // 2140483647
  je true
//lv 11
  cmp [rcx+rbx*4+20+B0],7F95303F // 2140483647
  je true
//lv 12
  cmp [rcx+rbx*4+20+AC],7F95303F // 2140483647
  je true

//lv 13
  cmp [rcx+rbx*4+20+A8],7F95303F // 2140483647
  je true
//lv 14
  cmp [rcx+rbx*4+20+A4],7F95303F // 2140483647
  je true
//lv 15
  cmp [rcx+rbx*4+20+A0],7F95303F // 2140483647
  je true
//lv 16
  cmp [rcx+rbx*4+20+9C],7F95303F // 2140483647
  je true

//lv 17
  cmp [rcx+rbx*4+20+98],7F95303F // 2140483647
  je true
//lv 18
  cmp [rcx+rbx*4+20+94],7F95303F // 2140483647
  je true
//lv 19
  cmp [rcx+rbx*4+20+90],7F95303F // 2140483647
  je true
//lv 20
  cmp [rcx+rbx*4+20+8C],7F95303F // 2140483647
  je true

//lv 21
  cmp [rcx+rbx*4+20+88],7F95303F // 2140483647
  je true
//lv 22
  cmp [rcx+rbx*4+20+84],7F95303F // 2140483647
  je true
//lv 23
  cmp [rcx+rbx*4+20+80],7F95303F // 2140483647
  je true
//lv 24
  cmp [rcx+rbx*4+20+7C],7F95303F // 2140483647
  je true

//lv 25
  cmp [rcx+rbx*4+20+78],7F95303F // 2140483647
  je true
//lv 26
  cmp [rcx+rbx*4+20+74],7F95303F // 2140483647
  je true
//lv 27
  cmp [rcx+rbx*4+20+70],7F95303F // 2140483647
  je true
//lv 28
  cmp [rcx+rbx*4+20+6C],7F95303F // 2140483647
  je true

//lv 29
  cmp [rcx+rbx*4+20+68],7F95303F // 2140483647
  je true
//lv 30
  cmp [rcx+rbx*4+20+64],7F95303F // 2140483647
  je true
//lv 31
  cmp [rcx+rbx*4+20+60],7F95303F // 2140483647
  je true
//lv 32
  cmp [rcx+rbx*4+20+5C],7F95303F // 2140483647
  je true

//lv 33
  cmp [rcx+rbx*4+20+58],7F95303F // 2140483647
  je true
//lv 34
  cmp [rcx+rbx*4+20+54],7F95303F // 2140483647
  je true
//lv 35
  cmp [rcx+rbx*4+20+50],7F95303F // 2140483647
  je true
//lv 36
  cmp [rcx+rbx*4+20+4C],7F95303F // 2140483647
  je true

//lv 37
  cmp [rcx+rbx*4+20+48],7F95303F // 2140483647
  je true
//lv 38
  cmp [rcx+rbx*4+20+44],7F95303F // 2140483647
  je true
//lv 39
  cmp [rcx+rbx*4+20+40],7F95303F // 2140483647
  je true
//lv 40
  cmp [rcx+rbx*4+20+3C],7F95303F // 2140483647
  je true

//lv 41
  cmp [rcx+rbx*4+20+38],7F95303F // 2140483647
  je true
//lv 42
  cmp [rcx+rbx*4+20+34],7F95303F // 2140483647
  je true
//lv 43
  cmp [rcx+rbx*4+20+30],7F95303F // 2140483647
  je true
//lv 44
  cmp [rcx+rbx*4+20+2C],7F95303F // 2140483647
  je true

//lv 45
  cmp [rcx+rbx*4+20+28],7F95303F // 2140483647
  je true
//lv 46
  cmp [rcx+rbx*4+20+24],7F95303F // 2140483647
  je true
//lv 47
  cmp [rcx+rbx*4+20+20],7F95303F // 2140483647
  je true
//lv 48
  cmp [rcx+rbx*4+20+1C],7F95303F // 2140483647
  je true

//lv 49
  cmp [rcx+rbx*4+20+18],7F95303F // 2140483647
  je true
//lv 50
  cmp [rcx+rbx*4+20+14],7F95303F // 2140483647
  je true
//lv 51
  cmp [rcx+rbx*4+20+10],7F95303F // 2140483647
  je true
//lv 52
  cmp [rcx+rbx*4+20+C],7F95303F // 2140483647
  je true

//lv 53
  cmp [rcx+rbx*4+20+8],7F95303F // 2140483647
  je true
//lv 54
  cmp [rcx+rbx*4+20+4],7F95303F // 2140483647
  je true
//lv 55
//  cmp [rcx+rbx*4+20+0],7F95303F // 2140483647
//  je true
  jmp checkExtra


checkExtra:
  cmp [toggleE],#1
  jne code

  cmp [rcx+rbx*4+20],#2500 // checks for min value XP
  jl code
  cmp [rcx+rbx*4+20],#60000 // checks for max value XP
  jg code

  // prevent player levelup
//lv 1
  cmp [rcx+rbx*4+20+D8],7F95303F // 2140483647
  je code
//lv 2
  cmp [rcx+rbx*4+20+D4],7F95303F // 2140483647
  je code
//lv 3
  cmp [rcx+rbx*4+20+D0],7F95303F // 2140483647
  je code
//lv 4
  cmp [rcx+rbx*4+20+CC],7F95303F // 2140483647
  je code

//lv 5
  cmp [rcx+rbx*4+20+C8],7F95303F // 2140483647
  je code
//lv 6
  cmp [rcx+rbx*4+20+C4],7F95303F // 2140483647
  je code
//lv 7
  cmp [rcx+rbx*4+20+C0],7F95303F // 2140483647
  je code
//lv 8
  cmp [rcx+rbx*4+20+BC],7F95303F // 2140483647
  je code

//lv 9
  cmp [rcx+rbx*4+20+B8],7F95303F // 2140483647
  je code
//lv 10
  cmp [rcx+rbx*4+20+B4],7F95303F // 2140483647
  je code
//lv 11
  cmp [rcx+rbx*4+20+B0],7F95303F // 2140483647
  je code
//lv 12
  cmp [rcx+rbx*4+20+AC],7F95303F // 2140483647
  je code

//lv 13
  cmp [rcx+rbx*4+20+A8],7F95303F // 2140483647
  je code
//lv 14
  cmp [rcx+rbx*4+20+A4],7F95303F // 2140483647
  je code
//lv 15
  cmp [rcx+rbx*4+20+A0],7F95303F // 2140483647
  je code
//lv 16
  cmp [rcx+rbx*4+20+9C],7F95303F // 2140483647
  je code

//lv 17
  cmp [rcx+rbx*4+20+98],7F95303F // 2140483647
  je code
//lv 18
  cmp [rcx+rbx*4+20+94],7F95303F // 2140483647
  je code
//lv 19
  cmp [rcx+rbx*4+20+90],7F95303F // 2140483647
  je code
//lv 20
  cmp [rcx+rbx*4+20+8C],7F95303F // 2140483647
  je code

//lv 21
  cmp [rcx+rbx*4+20+88],7F95303F // 2140483647
  je code
//lv 22
  cmp [rcx+rbx*4+20+84],7F95303F // 2140483647
  je code
//lv 23
  cmp [rcx+rbx*4+20+80],7F95303F // 2140483647
  je code
//lv 24
  cmp [rcx+rbx*4+20+7C],7F95303F // 2140483647
  je code

//lv 25
  cmp [rcx+rbx*4+20+78],7F95303F // 2140483647
  je code
//lv 26
  cmp [rcx+rbx*4+20+74],7F95303F // 2140483647
  je code
//lv 27
  cmp [rcx+rbx*4+20+70],7F95303F // 2140483647
  je code
//lv 28
  cmp [rcx+rbx*4+20+6C],7F95303F // 2140483647
  je code

//lv 29
  cmp [rcx+rbx*4+20+68],7F95303F // 2140483647
  je code
//lv 30
  cmp [rcx+rbx*4+20+64],7F95303F // 2140483647
  je code
//lv 31
  cmp [rcx+rbx*4+20+60],7F95303F // 2140483647
  je code
//lv 32
  cmp [rcx+rbx*4+20+5C],7F95303F // 2140483647
  je code

//lv 33
  cmp [rcx+rbx*4+20+58],7F95303F // 2140483647
  je code
//lv 34
  cmp [rcx+rbx*4+20+54],7F95303F // 2140483647
  je code
//lv 35
  cmp [rcx+rbx*4+20+50],7F95303F // 2140483647
  je code
//lv 36
  cmp [rcx+rbx*4+20+4C],7F95303F // 2140483647
  je code

//lv 37
  cmp [rcx+rbx*4+20+48],7F95303F // 2140483647
  je code
//lv 38
  cmp [rcx+rbx*4+20+44],7F95303F // 2140483647
  je code
//lv 39
  cmp [rcx+rbx*4+20+40],7F95303F // 2140483647
  je code
//lv 40
  cmp [rcx+rbx*4+20+3C],7F95303F // 2140483647
  je code

//lv 41
  cmp [rcx+rbx*4+20+38],7F95303F // 2140483647
  je code
//lv 42
  cmp [rcx+rbx*4+20+34],7F95303F // 2140483647
  je code
//lv 43
  cmp [rcx+rbx*4+20+30],7F95303F // 2140483647
  je code
//lv 44
  cmp [rcx+rbx*4+20+2C],7F95303F // 2140483647
  je code

//lv 45
  cmp [rcx+rbx*4+20+28],7F95303F // 2140483647
  je code
//lv 46
  cmp [rcx+rbx*4+20+24],7F95303F // 2140483647
  je code
//lv 47
  cmp [rcx+rbx*4+20+20],7F95303F // 2140483647
  je code
//lv 48
  cmp [rcx+rbx*4+20+1C],7F95303F // 2140483647
  je code

//lv 49
  cmp [rcx+rbx*4+20+18],7F95303F // 2140483647
  je code
//lv 50
  cmp [rcx+rbx*4+20+14],7F95303F // 2140483647
  je code
//lv 51
  cmp [rcx+rbx*4+20+10],7F95303F // 2140483647
  je code
//lv 52
  cmp [rcx+rbx*4+20+C],7F95303F // 2140483647
  je code

//lv 53
  cmp [rcx+rbx*4+20+8],7F95303F // 2140483647
  je code
//lv 54
  cmp [rcx+rbx*4+20+4],7F95303F // 2140483647
  je code
//lv 55

  jmp true



true:
  mov [rcx+rbx*4+20],#5 // set current weapon level required down to 5XP
  jmp code


code:
  mov eax,[rcx+rbx*4+20]
  mov rbx,[rsp+30]
  jmp return

toggleW:
  dd #0

toggleP:
  dd #0

toggleE:
  dd #0


weaponLV:
  jmp newmem
  nop 4
return:
registersymbol(weaponLV)
registersymbol(toggleW)
registersymbol(toggleP)
registersymbol(toggleE)

[DISABLE]

weaponLV:
  db 8B 44 99 20 48 8B 5C 24 30

unregistersymbol(weaponLV)
unregistersymbol(toggleW)
unregistersymbol(toggleP)
unregistersymbol(toggleE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 7FFF713187DA

7FFF713187BD: 48 8B F9        - mov rdi,rcx
7FFF713187C0: 3B 59 18        - cmp ebx,[rcx+18]
7FFF713187C3: 72 07           - jb 7FFF713187CC
7FFF713187C5: 33 C9           - xor ecx,ecx
7FFF713187C7: E8 34 E4 16 01  - call 7FFF72486C00
7FFF713187CC: 48 8B 4F 10     - mov rcx,[rdi+10]
7FFF713187D0: 48 85 C9        - test rcx,rcx
7FFF713187D3: 74 14           - je 7FFF713187E9
7FFF713187D5: 3B 59 18        - cmp ebx,[rcx+18]
7FFF713187D8: 73 15           - jae 7FFF713187EF
// ---------- INJECTING HERE ----------
7FFF713187DA: 8B 44 99 20     - mov eax,[rcx+rbx*4+20]
// ---------- DONE INJECTING  ----------
7FFF713187DE: 48 8B 5C 24 30  - mov rbx,[rsp+30]
7FFF713187E3: 48 83 C4 20     - add rsp,20
7FFF713187E7: 5F              - pop rdi
7FFF713187E8: C3              - ret 
7FFF713187E9: E8 22 E7 B4 FE  - call 7FFF6FE66F10
7FFF713187EE: CC              - int 3 
7FFF713187EF: E8 0C E7 B4 FE  - call 7FFF6FE66F00
7FFF713187F4: CC              - int 3 
7FFF713187F5: CC              - int 3 
7FFF713187F6: CC              - int 3
youtube.com/ZoDDeL
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>375</ID>
                  <Description>"instant weapon levelup                         (toggle off/on)   ---&gt;"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:off
1:on
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>toggleW</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>681</ID>
                      <Description>"filter override for not working/new weapons (shot storm auto)   (toggle off/on)   ---&gt;"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:off
1:on
</DropDownList>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>toggleE</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>376</ID>
                  <Description>"instant player levelup (DANGER! may soflock softlock xp screen)    (toggle off/on)   ---&gt;"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:off
1:on
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>toggleP</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>635</ID>
              <Description>"sets all xp token (weapon, rank, battlepass) to 600 minutes (10 hours)"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2023-12-31
  Author : ZoDDeL

  This script does blah blah blah


fp:60 w:108 fp:45 w:668 fp:30 w:108 fp:15

48 8B 43 40 48 89 7C 24 38 48 85 C0 0F 84 * * * * F3 0F 10 40 64

}
// "GameAssembly.dll"+5DE99FB
// F3 0F 10 40 5C 33 C9 0F 2F 05 * * * * 73 3B E8
// F3 0F 10 40 5C 33 C9 0F 2F 05 * * * * 73 3B E8 B0 75
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 10 BE
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 60
// combat zone battle royale era v 0.12.57
// "project.dll"+3C8017B
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 90
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 A0
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 30
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 D0
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 60
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 90 // v0.16.11
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 30 // v0.17.18
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 10 // v0.18.38
// F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 70 // v0.19.4
//                                                80
//                                                D0

[ENABLE]

aobscanmodule(xpToken,project.dll,F3 0F 10 40 64 33 C9 0F 2F 05 * * * * 73 3B E8 80) // should be unique
alloc(newmem,$1000,xpToken)

label(code)
label(return)

newmem:
  push rbx
  mov rbx,[tokenMinutes]
  mov [rax+64],rbx
  pop rbx

code:
  movss xmm0,[rax+64]
  jmp return

tokenMinutes:
dd (float)600


xpToken:
  jmp newmem
return:
registersymbol(xpToken)
registersymbol(tokenMinutes)

[DISABLE]

xpToken:
  db F3 0F 10 40 64

unregistersymbol(xpToken)
unregistersymbol(tokenMinutes)
dealloc(newmem)

{ v 0.10.21
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+5DE99FB

GameAssembly.dll+5DE99C5: E8 16 E1 81 FA        - call GameAssembly.dll+607AE0
GameAssembly.dll+5DE99CA: 48 8D 0D A7 36 29 01  - lea rcx,[GameAssembly.dll+707D078]
GameAssembly.dll+5DE99D1: E8 0A E1 81 FA        - call GameAssembly.dll+607AE0
GameAssembly.dll+5DE99D6: 48 8D 0D 83 35 29 01  - lea rcx,[GameAssembly.dll+707CF60]
GameAssembly.dll+5DE99DD: E8 FE E0 81 FA        - call GameAssembly.dll+607AE0
GameAssembly.dll+5DE99E2: C6 05 FD B7 66 01 01  - mov byte ptr [GameAssembly.dll+74551E6],01
GameAssembly.dll+5DE99E9: 48 8B 43 40           - mov rax,[rbx+40]
GameAssembly.dll+5DE99ED: 48 89 7C 24 38        - mov [rsp+38],rdi
GameAssembly.dll+5DE99F2: 48 85 C0              - test rax,rax
GameAssembly.dll+5DE99F5: 0F 84 D3 00 00 00     - je GameAssembly.dll+5DE9ACE
// ---------- INJECTING HERE ----------
GameAssembly.dll+5DE99FB: F3 0F 10 40 5C        - movss xmm0,[rax+5C]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+5DE9A00: 33 C9                 - xor ecx,ecx
GameAssembly.dll+5DE9A02: 0F 2F 05 67 E4 35 00  - comiss xmm0,[GameAssembly.dll+6147E70]
GameAssembly.dll+5DE9A09: 73 3B                 - jae GameAssembly.dll+5DE9A46
GameAssembly.dll+5DE9A0B: E8 20 36 C1 FF        - call GameAssembly.dll+59FD030
GameAssembly.dll+5DE9A10: 48 85 C0              - test rax,rax
GameAssembly.dll+5DE9A13: 0F 84 BB 00 00 00     - je GameAssembly.dll+5DE9AD4
GameAssembly.dll+5DE9A19: 4C 8B 48 18           - mov r9,[rax+18]
GameAssembly.dll+5DE9A1D: 4C 8B 40 28           - mov r8,[rax+28]
GameAssembly.dll+5DE9A21: 48 8B 15 50 36 29 01  - mov rdx,[GameAssembly.dll+707D078]
GameAssembly.dll+5DE9A28: 48 8B 48 40           - mov rcx,[rax+40]
}



{ v 0.11.38
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+3A9EBBB

GameAssembly.dll+3A9EB85: E8 36 DF A7 FC        - call GameAssembly.dll+51CAC0
GameAssembly.dll+3A9EB8A: 48 8D 0D 87 5D 00 01  - lea rcx,[GameAssembly.dll+4AA4918]
GameAssembly.dll+3A9EB91: E8 2A DF A7 FC        - call GameAssembly.dll+51CAC0
GameAssembly.dll+3A9EB96: 48 8D 0D 6B 5C 00 01  - lea rcx,[GameAssembly.dll+4AA4808]
GameAssembly.dll+3A9EB9D: E8 1E DF A7 FC        - call GameAssembly.dll+51CAC0
GameAssembly.dll+3A9EBA2: C6 05 D4 9F 29 01 01  - mov byte ptr [GameAssembly.dll+4D38B7D],01
GameAssembly.dll+3A9EBA9: 48 8B 43 40           - mov rax,[rbx+40]
GameAssembly.dll+3A9EBAD: 48 89 7C 24 38        - mov [rsp+38],rdi
GameAssembly.dll+3A9EBB2: 48 85 C0              - test rax,rax
GameAssembly.dll+3A9EBB5: 0F 84 D3 00 00 00     - je GameAssembly.dll+3A9EC8E
// ---------- INJECTING HERE ----------
GameAssembly.dll+3A9EBBB: F3 0F 10 40 64        - movss xmm0,[rax+64]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+3A9EBC0: 33 C9                 - xor ecx,ecx
GameAssembly.dll+3A9EBC2: 0F 2F 05 A7 32 23 00  - comiss xmm0,[GameAssembly.dll+3CD1E70]
GameAssembly.dll+3A9EBC9: 73 3B                 - jae GameAssembly.dll+3A9EC06
GameAssembly.dll+3A9EBCB: E8 10 BE E8 FF        - call GameAssembly.dll+392A9E0
GameAssembly.dll+3A9EBD0: 48 85 C0              - test rax,rax
GameAssembly.dll+3A9EBD3: 0F 84 BB 00 00 00     - je GameAssembly.dll+3A9EC94
GameAssembly.dll+3A9EBD9: 4C 8B 48 18           - mov r9,[rax+18]
GameAssembly.dll+3A9EBDD: 4C 8B 40 28           - mov r8,[rax+28]
GameAssembly.dll+3A9EBE1: 48 8B 15 30 5D 00 01  - mov rdx,[GameAssembly.dll+4AA4918]
GameAssembly.dll+3A9EBE8: 48 8B 48 40           - mov rcx,[rax+40]
}

{ v 0.12.57
// ORIGINAL CODE - INJECTION POINT: project.dll+3C8017B

project.dll+3C80145: E8 96 9E 8A FC        - call project.dll+529FE0
project.dll+3C8014A: 48 8D 0D 77 85 FE 00  - lea rcx,[project.dll+4C686C8]
project.dll+3C80151: E8 8A 9E 8A FC        - call project.dll+529FE0
project.dll+3C80156: 48 8D 0D 53 84 FE 00  - lea rcx,[project.dll+4C685B0]
project.dll+3C8015D: E8 7E 9E 8A FC        - call project.dll+529FE0
project.dll+3C80162: C6 05 39 58 30 01 01  - mov byte ptr [project.dll+4F859A2],01
project.dll+3C80169: 48 8B 43 40           - mov rax,[rbx+40]
project.dll+3C8016D: 48 89 7C 24 38        - mov [rsp+38],rdi
project.dll+3C80172: 48 85 C0              - test rax,rax
project.dll+3C80175: 0F 84 D3 00 00 00     - je project.dll+3C8024E
// ---------- INJECTING HERE ----------
project.dll+3C8017B: F3 0F 10 40 64        - movss xmm0,[rax+64]
// ---------- DONE INJECTING  ----------
project.dll+3C80180: 33 C9                 - xor ecx,ecx
project.dll+3C80182: 0F 2F 05 07 8D 23 00  - comiss xmm0,[project.dll+3EB8E90]
project.dll+3C80189: 73 3B                 - jae project.dll+3C801C6
project.dll+3C8018B: E8 90 31 E8 FF        - call project.dll+3B03320
project.dll+3C80190: 48 85 C0              - test rax,rax
project.dll+3C80193: 0F 84 BB 00 00 00     - je project.dll+3C80254
project.dll+3C80199: 4C 8B 48 18           - mov r9,[rax+18]
project.dll+3C8019D: 4C 8B 40 28           - mov r8,[rax+28]
project.dll+3C801A1: 48 8B 15 20 85 FE 00  - mov rdx,[project.dll+4C686C8]
project.dll+3C801A8: 48 8B 48 40           - mov rcx,[rax+40]
}


</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1404</ID>
                  <Description>"set minutes (1440 = 24 hours / 43200 = 30 days / 525600 = 365 days)  ---&gt;"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>tokenMinutes</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>755</ID>
              <Description>"free blackmarket"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-08-08
  Author : ZoDDeL

  This script does blah blah blah

48 8B 44 C3 20 33
48 8B 44 C3 20 33 D2 48 8B CF 48 89 84 24 C0 00 00 00 E8 B9
48 8B 44 C3 20 33 D2 48 8B CF 48 89 84 24 C0 00 00 00 E8 F9 // 18.38
48 8B 44 C3 20 33 D2 48 8B CF 48 89 84 24 C0 00 00 00 E8 89 // 19.4
48 8B 44 C3 20 33 D2 48 8B CF 48 89 84 24 C0 00 00 00 E8 69 // 20.1
}

[ENABLE]

aobscanmodule(blackmarket,Project.dll,48 8B 44 C3 20 33 D2 48 8B CF 48 89 84 24 C0 00 00 00 E8 69) // should be unique
alloc(newmem,$1000,blackmarket)

label(code)
label(return)

newmem:
  cmp dword ptr [rbx+rax*8+20+4],#0
  je code
  cmp dword ptr [rbx+rax*8+20+4],#15000
  jg code
  mov dword ptr [rbx+rax*8+20+4],#0
  jmp code

code:
  mov rax,[rbx+rax*8+20]
  jmp return

blackmarket:
  jmp newmem
return:
registersymbol(blackmarket)

[DISABLE]

blackmarket:
  db 48 8B 44 C3 20

unregistersymbol(blackmarket)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+3D8BBB0

Project.dll+3D8BB8E: 0F 84 81 00 00 00        - je Project.dll+3D8BC15
Project.dll+3D8BB94: 48 8B 5B 38              - mov rbx,[rbx+38]
Project.dll+3D8BB98: 48 8D 4C 24 20           - lea rcx,[rsp+20]
Project.dll+3D8BB9D: 33 D2                    - xor edx,edx
Project.dll+3D8BB9F: E8 DC 85 DE FF           - call Project.dll+3B74180
Project.dll+3D8BBA4: 48 85 DB                 - test rbx,rbx
Project.dll+3D8BBA7: 74 6C                    - je Project.dll+3D8BC15
Project.dll+3D8BBA9: 48 98                    - cdqe 
Project.dll+3D8BBAB: 3B 43 18                 - cmp eax,[rbx+18]
Project.dll+3D8BBAE: 73 6B                    - jae Project.dll+3D8BC1B
// ---------- INJECTING HERE ----------
Project.dll+3D8BBB0: 48 8B 44 C3 20           - mov rax,[rbx+rax*8+20]
// ---------- DONE INJECTING  ----------
Project.dll+3D8BBB5: 33 D2                    - xor edx,edx
Project.dll+3D8BBB7: 48 8B CF                 - mov rcx,rdi
Project.dll+3D8BBBA: 48 89 84 24 C0 00 00 00  - mov [rsp+000000C0],rax
Project.dll+3D8BBC2: E8 29 FB FF FF           - call Project.dll+3D8B6F0
Project.dll+3D8BBC7: 84 C0                    - test al,al
Project.dll+3D8BBC9: 74 2A                    - je Project.dll+3D8BBF5
Project.dll+3D8BBCB: 48 8B 9C 24 C0 00 00 00  - mov rbx,[rsp+000000C0]
Project.dll+3D8BBD3: 48 8D 4C 24 20           - lea rcx,[rsp+20]
Project.dll+3D8BBD8: 33 D2                    - xor edx,edx
Project.dll+3D8BBDA: E8 E1 73 DE FF           - call Project.dll+3B72FC0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1029</ID>
              <Description>"free bundles (disabling this script = gamecrash!!!)"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-08-29
  Author : ZoDDeL

  This script does blah blah blah

slava ukraini
0000000003010007 00000175EA457840 00000174B53D5F40 00000174B53D5F40 0000000000000001 0000000000000000


#50462718 // combat master points
#50462719 // "coming soon" placeholder

#50397184 // desert cobra bundle
#50397185 // hype racer bundle
#50397186 // red storm bundle
#50397187 // skull face bundle
#50397188 // welcome back bundle
#50397189 // phoenix rise bundle
#50397190 // dual katana bundle
#50397191 // slava ukraini bundle
#50397192 // polar star bundle
#50397193 // shadow rider bundle
#50397194 // wolverine bundle
#50397195 // street fighter bundle
#50397196 // cobra queen bundle
#50397197 // wolf bundle
#50397198 // starter pack bundle
#50397199 // dino rex bundle


8B 52 20 48 83 C1 10
8B 52 20 48 83 C1 18
}

[ENABLE]

aobscanmodule(bundlesINJECT,Project.dll,8B 52 20 48 83 C1 18) // should be unique
alloc(newmem,$2000,bundlesINJECT)
//alloc(freeAOB,100)

label(code)
label(return)
label(getAOB)
label(free)

newmem:
  cmp dword ptr [rdx+20],#50397191 // checking free bundle slava ukraini
  je getAOB  // jump if compare is true (to grab the "FREE" pointer)
  cmp dword ptr [rdx+20],#50462718 // skip CM points // crashfix
  je code
  cmp dword ptr [rdx+20],#50462719 // skip coming soon // crashfix
  je code
  jmp free  // else jump to free section (to overwrite the bundle price values / pointer)


getAOB:
  push rax  // backup rax
  //lea rax,[rdx+30]  //  getting the "FREE" pointer from slava ukraini bundle into rax
  //mov [freeAOB],rax  // saving the free pointer
  lea rax,[rdx+38]  //  getting the "FREE" pointer from slava ukraini bundle into rax
  mov [freeAOB],rax  // saving the free pointer
  pop rax  // return rax to default
  jmp free


free:
  push rax  // backup rax
  lea rax,[freeAOB]  // pull back the saved "FRRE" pointer 1
  //mov [rdx+30],rax  // writing the "FREE" pointer to bundle pointer 1
  //mov [rdx+38],rax  // writing the "FREE" pointer to bundle pointer 2
  mov [rdx+38],rax  // writing the "FREE" pointer to bundle pointer 1
  mov [rdx+40],rax  // writing the "FREE" pointer to bundle pointer 2
  //mov [rdx+44],#0  // setting the premium value from 1 to 0
  //mov [rdx+48],#0  // setting the price for CP bundles to 0
  mov [rdx+4C],#0  // setting the premium value from 1 to 0
  mov [rdx+50],#0  // setting the price for CP bundles to 0
  pop rax  // return rax to default
  jmp code


code:
  mov edx,[rdx+20]
  add rcx,18
  jmp return


freeAOB:
dd 0


bundlesINJECT:
  jmp newmem
  nop 2
return:
registersymbol(bundlesINJECT)
registersymbol(freeAOB)
[DISABLE]

bundlesINJECT:
  db 8B 52 20 48 83 C1 18

unregistersymbol(bundlesINJECT)
unregistersymbol(freeAOB)
dealloc(newmem)
//dealloc(freeAOB)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+3E189E5

Project.dll+3E189C9: E8 E2 E0 75 FC  - call Project.dll+576AB0
Project.dll+3E189CE: CC              - int 3 
Project.dll+3E189CF: CC              - int 3 
Project.dll+3E189D0: 48 89 5C 24 08  - mov [rsp+08],rbx
Project.dll+3E189D5: 57              - push rdi
Project.dll+3E189D6: 48 83 EC 20     - sub rsp,20
Project.dll+3E189DA: 48 8B DA        - mov rbx,rdx
Project.dll+3E189DD: 48 8B F9        - mov rdi,rcx
Project.dll+3E189E0: 48 85 D2        - test rdx,rdx
Project.dll+3E189E3: 74 45           - je Project.dll+3E18A2A
// ---------- INJECTING HERE ----------
Project.dll+3E189E5: 8B 52 20        - mov edx,[rdx+20]
// ---------- DONE INJECTING  ----------
Project.dll+3E189E8: 48 83 C1 10     - add rcx,10
Project.dll+3E189EC: 45 33 C0        - xor r8d,r8d
Project.dll+3E189EF: E8 0C 0C D5 FF  - call Project.dll+3B69600
Project.dll+3E189F4: 84 C0           - test al,al
Project.dll+3E189F6: 74 0D           - je Project.dll+3E18A05
Project.dll+3E189F8: 32 C0           - xor al,al
Project.dll+3E189FA: 48 8B 5C 24 30  - mov rbx,[rsp+30]
Project.dll+3E189FF: 48 83 C4 20     - add rsp,20
Project.dll+3E18A03: 5F              - pop rdi
Project.dll+3E18A04: C3              - ret 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1249</ID>
              <Description>"turn daily CP rewards into 15.000"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-09-28
  Author : ZoDDeL

  This script does blah blah blah

67108883 = 15000CP
67108882 = 9100CP
67108881 = 5000CP
67108880 = 2400CP
67108879 = 1400CP
67108878 = 1200CP
67108877 = 1100CP
67108876 = 1000CP
67108875 = 800CP
67108874 = 600CP
67108873 = 500CP
67108872 = 450CP
67108871 = 300CP
67108870 = 200CP
67108869 = 80CP
67108868 = 50CP
67108867 = 30CP
67108866 = 20CP
67108865 = 10CP
67108864 = 1CP


group 10 CP
4byte  skip    4byte      skip  4byte  skip  4byte
1      4       67108865   4     1      4     0

group 20 CP
4byte  skip    4byte      skip  4byte  skip  4byte
1      4       67108866   4     1      4     0

group 30 CP
4byte  skip    4byte      skip  4byte  skip  4byte
1      4(0)    67108867   4(0)  1      4(0)  0


group 10CP + 20CP + 30CP
4byte      skip    4byte      skip     4byte
67108865   28(dec) 67108866   28(dec)  67108867


4p:67108865 w:28 4p:67108866 w:28 4p:67108867 w:0 4:1 w:0 4:0
}

[ENABLE]

aobscanmodule(CPdaily,Project.dll,45 0F B6 C8 45 84 C0) // should be unique
alloc(newmem,$1000,CPdaily)

label(code)
label(return)

newmem:
  cmp dword ptr [rdx+64],#67108865
  je boost  // 67371017
  jmp code

boost:
  mov [rdx+64],#67108883
  mov [rdx+84],#67108883
  mov [rdx+A4],#67108883
  jmp code



code:
  movzx r9d,r8b
  test r8b,r8b
  jmp return

CPdaily:
  jmp newmem
  nop 2
return:
registersymbol(CPdaily)

[DISABLE]

CPdaily:
  db 45 0F B6 C8 45 84 C0

unregistersymbol(CPdaily)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+38224C0

Project.dll+38224A7: 48 8B 74 24 30  - mov rsi,[rsp+30]
Project.dll+38224AC: 48 8B 5C 24 38  - mov rbx,[rsp+38]
Project.dll+38224B1: 48 83 C4 20     - add rsp,20
Project.dll+38224B5: 5F              - pop rdi
Project.dll+38224B6: C3              - ret 
Project.dll+38224B7: E8 94 CA C5 FC  - call Project.ehFHmXjrkZW+B0
Project.dll+38224BC: CC              - int 3 
Project.dll+38224BD: CC              - int 3 
Project.dll+38224BE: CC              - int 3 
Project.dll+38224BF: CC              - int 3 
// ---------- INJECTING HERE ----------
Project.dll+38224C0: 45 0F B6 C8     - movzx r9d,r8b
// ---------- DONE INJECTING  ----------
Project.dll+38224C4: 45 84 C0        - test r8b,r8b
Project.dll+38224C7: 74 2F           - je Project.dll+38224F8
Project.dll+38224C9: 41 83 E9 01     - sub r9d,01
Project.dll+38224CD: 74 1B           - je Project.dll+38224EA
Project.dll+38224CF: 48 8B C1        - mov rax,rcx
Project.dll+38224D2: 41 83 F9 01     - cmp r9d,01
Project.dll+38224D6: 74 07           - je Project.dll+38224DF
Project.dll+38224D8: 0F 57 C0        - xorps xmm0,xmm0
Project.dll+38224DB: 0F 11 01        - movups [rcx],xmm0
Project.dll+38224DE: C3              - ret 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>856</ID>
              <Description>"turn daily CP bonus reward into 15.000"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-08-14
  Author : ZoDDeL

  This script does blah blah blah

group
4:1 4p:67108868 4:1 4:0 4:1 4:67108868 4:1 4:0 4:1 4:67108868 4:1 4:0

}

[ENABLE]

aobscanmodule(dailyBonusCP,Project.dll,0F 10 04 C2 48 8B C6) // should be unique
alloc(newmem,$1000,dailyBonusCP)

label(code)
label(return)

newmem:
  cmp dword ptr [rdx+rax*8+4],#67108868
  je boost
  // 67371017 ??? first jägermeister reward / 6 hours xp token ?
  {
  cmp dword ptr [rdx+rax*8+4],#67108865
  je boost
  cmp dword ptr [rdx+rax*8+4],#67108866
  je boost
  cmp dword ptr [rdx+rax*8+4],#67108885
  je boost
  }
  jmp code

boost:
  mov [rdx+rax*8+4],#67108883

code:
  movups xmm0,[rdx+rax*8]
  mov rax,rsi
  jmp return

dailyBonusCP:
  jmp newmem
  nop 2
return:
registersymbol(dailyBonusCP)

[DISABLE]

dailyBonusCP:
  db 0F 10 04 C2 48 8B C6

unregistersymbol(dailyBonusCP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+1406E3E

Project.dll+1406E1D: 33 C9           - xor ecx,ecx
Project.dll+1406E1F: E8 AC C1 25 01  - call Project.dll+2662FD0
Project.dll+1406E24: 48 8B 57 10     - mov rdx,[rdi+10]
Project.dll+1406E28: 48 85 D2        - test rdx,rdx
Project.dll+1406E2B: 74 26           - je Project.dll+1406E53
Project.dll+1406E2D: 3B 5A 18        - cmp ebx,[rdx+18]
Project.dll+1406E30: 73 27           - jae Project.dll+1406E59
Project.dll+1406E32: 48 8D 43 02     - lea rax,[rbx+02]
Project.dll+1406E36: 48 8B 5C 24 30  - mov rbx,[rsp+30]
Project.dll+1406E3B: 48 03 C0        - add rax,rax
// ---------- INJECTING HERE ----------
Project.dll+1406E3E: 0F 10 04 C2     - movups xmm0,[rdx+rax*8]
// ---------- DONE INJECTING  ----------
Project.dll+1406E42: 48 8B C6        - mov rax,rsi
Project.dll+1406E45: 0F 11 06        - movups [rsi],xmm0
Project.dll+1406E48: 48 8B 74 24 38  - mov rsi,[rsp+38]
Project.dll+1406E4D: 48 83 C4 20     - add rsp,20
Project.dll+1406E51: 5F              - pop rdi
Project.dll+1406E52: C3              - ret 
Project.dll+1406E53: E8 F8 20 17 FF  - call Project.dll+578F50
Project.dll+1406E58: CC              - int 3 
Project.dll+1406E59: E8 E2 20 17 FF  - call Project.dll+578F40
Project.dll+1406E5E: CC              - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1501</ID>
              <Description>"instant unlock operation rewards"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-10-20
  Author : ZoDDeL

  This script does blah blah blah

5 +14(hex) 8 +14(hex) 22

req1                        req2                       req3
4p:5 4:1 4:67108865 4:1 4:0 4:8 4:1 4:67108866 4:1 4:0 4:14 4:1 4:67108885

42 0F 10 4C 09 70 0F 29 48

39A56EC
39A5F3C
}

define(address,"Project.dll"+39A56EC)
define(bytes,42 0F 10 4C 09 70)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Project.dll"+39A56EC)

label(code)
label(return)

newmem:
  cmp [rcx+r9+74],#67108865
  je cash
  jmp easy

cash:
  cmp [toggleCash],#1
  jne easy
  mov [rcx+r9+74],#67108883
  mov [rcx+r9+74+14],#67108883
  mov [rcx+r9+74+14+14],#67108883  // 6 hours BP XP token 17039374
  jmp easy

easy:
  cmp [toggleInstantOPS],#1
  jne code
  cmp [rcx+r9+74],#0
  je code
  {
  cmp [rcx+r9+74],#77777777
  jg code
  cmp [rcx+r9+74],#10000000
  jl code
  }
  mov [rcx+r9+70-4],#0
  mov [rcx+r9+70-4+14],#0
  mov [rcx+r9+70-4+14+14],#0
  jmp code

code:
  movups xmm1,[rcx+r9+70]
  jmp return

toggleCash:
dd #0

toggleInstantOPS:
dd #1

address:
  jmp newmem
  nop
return:

registersymbol(toggleCash)
registersymbol(toggleInstantOPS)

[DISABLE]

address:
  db bytes
  // movups xmm1,[rcx+r9+70]

unregistersymbol(toggleCash)
unregistersymbol(toggleInstantOPS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+397314C

Project.dll+3973111: 42 0F 10 44 09 20              - movups xmm0,[rcx+r9+20]
Project.dll+3973117: 0F 29 44 24 50                 - movaps [rsp+50],xmm0
Project.dll+397311C: 42 0F 10 4C 09 30              - movups xmm1,[rcx+r9+30]
Project.dll+3973122: 0F 29 4C 24 60                 - movaps [rsp+60],xmm1
Project.dll+3973127: 42 0F 10 44 09 40              - movups xmm0,[rcx+r9+40]
Project.dll+397312D: 0F 29 44 24 70                 - movaps [rsp+70],xmm0
Project.dll+3973132: 42 0F 10 4C 09 50              - movups xmm1,[rcx+r9+50]
Project.dll+3973138: 0F 29 88 68 FF FF FF           - movaps [rax-00000098],xmm1
Project.dll+397313F: 42 0F 10 44 09 60              - movups xmm0,[rcx+r9+60]
Project.dll+3973145: 0F 29 80 78 FF FF FF           - movaps [rax-00000088],xmm0
// ---------- INJECTING HERE ----------
Project.dll+397314C: 42 0F 10 4C 09 70              - movups xmm1,[rcx+r9+70]
// ---------- DONE INJECTING  ----------
Project.dll+3973152: 0F 29 48 88                    - movaps [rax-78],xmm1
Project.dll+3973156: 42 0F 10 84 09 80 00 00 00     - movups xmm0,[rcx+r9+00000080]
Project.dll+397315F: 0F 29 40 98                    - movaps [rax-68],xmm0
Project.dll+3973163: 42 0F 10 8C 09 90 00 00 00     - movups xmm1,[rcx+r9+00000090]
Project.dll+397316C: 0F 29 48 A8                    - movaps [rax-58],xmm1
Project.dll+3973170: F2 42 0F 10 84 09 A0 00 00 00  - movsd xmm0,[rcx+r9+000000A0]
Project.dll+397317A: 48 8D 4C 24 50                 - lea rcx,[rsp+50]
Project.dll+397317F: F2 0F 11 40 B8                 - movsd [rax-48],xmm0
Project.dll+3973184: E8 A7 A6 72 FF                 - call Project.dll+309D830
Project.dll+3973189: 84 C0                          - test al,al
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1297</ID>
                  <Description>"instant clear missions                       (toggle off/on)   ---&gt;"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:off
1:on
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>toggleInstantOPS</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1298</ID>
                  <Description>"swap 10,20,50CP with 15.000CP      (toggle off/on)   ---&gt;"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:off
1:on
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>toggleCash</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1217</ID>
              <Description>"easy unlock camo masters (solid gold, rose, platinum, slayer, laser) per weapon"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-09-25
  Author : ZoDDeL

  This script does blah blah blah

ax holds current count

4byte dec shot storm
11862023 4294967295 11862023 0 822352560 579
0 0 0 0 10 0
1 0 4 0 400 0
1 0 512 0 100 0
1 0 1024 0 200 0
0 0 0 32 333 0
0 0 0 64 666 0
0 0 0 128 15

BS:76 OOO:U 4p:400 4:100 4:200 4:333
4p:400 4:0 wp:16 4p:100 4p:0 wp:16 4p:200 4p:0
}

[ENABLE]

aobscanmodule(camoMastersA,Project.dll,44 0F B7 44 CA 30) // should be unique
alloc(newmem,$1000,camoMastersA)

label(code)
label(return)

newmem:

code:
  movzx r8d,word ptr [rdx+rcx*8+30]  // &lt;--- this is the requirement of 4 masters camo 1 2 3 and green
  //mov ax,#1
  mov ax, word ptr [rdx+rcx*8+30] // &lt;-- this writes the requirement value to the current action count in the register ax
  dec ax // &lt;--- this is a safeguard to prevent problems

  jmp return

camoMastersA:
  jmp newmem
  nop
return:
registersymbol(camoMastersA)

[DISABLE]

camoMastersA:
  db 44 0F B7 44 CA 30

unregistersymbol(camoMastersA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+3BD0947

Project.dll+3BD0918: 66 89 4C 24 68           - mov [rsp+68],cx
Project.dll+3BD091D: 33 D2                    - xor edx,edx
Project.dll+3BD091F: 48 8D 4C 24 60           - lea rcx,[rsp+60]
Project.dll+3BD0924: E8 57 EA A3 FC           - call Project.dll+60F380
Project.dll+3BD0929: 48 8B 94 24 B0 00 00 00  - mov rdx,[rsp+000000B0]
Project.dll+3BD0931: 48 85 D2                 - test rdx,rdx
Project.dll+3BD0934: 0F 84 7A 04 00 00        - je Project.dll+3BD0DB4
Project.dll+3BD093A: 3B 7A 18                 - cmp edi,[rdx+18]
Project.dll+3BD093D: 0F 83 1C 05 00 00        - jae Project.dll+3BD0E5F
Project.dll+3BD0943: 4B 8D 0C 64              - lea rcx,[r12+r12*2]
// ---------- INJECTING HERE ----------
Project.dll+3BD0947: 44 0F B7 44 CA 30        - movzx r8d,word ptr [rdx+rcx*8+30]
// ---------- DONE INJECTING  ----------
Project.dll+3BD094D: 0F B7 C8                 - movzx ecx,ax
Project.dll+3BD0950: FF C1                    - inc ecx
Project.dll+3BD0952: 4C 8B 0D 0F 7F 4C 01     - mov r9,[Project.dll+5098868]
Project.dll+3BD0959: 33 D2                    - xor edx,edx
Project.dll+3BD095B: E8 E0 30 57 FD           - call Project.dll+1143A40
Project.dll+3BD0960: 45 33 C0                 - xor r8d,r8d
Project.dll+3BD0963: 0F B7 D0                 - movzx edx,ax
Project.dll+3BD0966: 48 8D 4C 24 70           - lea rcx,[rsp+70]
Project.dll+3BD096B: E8 20 EA A3 FC           - call Project.dll+60F390
Project.dll+3BD0970: 0F B7 48 08              - movzx ecx,word ptr [rax+08]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1396</ID>
                  <Description>"&lt;---   description"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1391</ID>
                      <Description>"solid gold requires all previous basic camos unlocked !!! + 1 headshot kill"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1392</ID>
                      <Description>"solid rose gold requires all previous basic camos unlocked !!! + 1 time rapid kill 2 enemies"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1393</ID>
                      <Description>"solid rose gold requires all previous basic camos unlocked !!! + 1 time rapid kill 3 enemies"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1394</ID>
                      <Description>"slayer tempered requires kill 1 demon in demon slayer mode"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1395</ID>
                      <Description>"laser green requires 1 kill with canted aiming (laser attachment)"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1361</ID>
              <Description>"easy unlock camo masters (demon ruby, combat zone topo) all weapon"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ Game   : CombatMaster.exe
  Version: 
  Date   : 2024-10-01
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(camoMastersB,Project.dll,0F B7 C8 FF C1 45) // should be unique
alloc(newmem,$1000,camoMastersB)

label(code)
label(return)

newmem:
  mov ax, word ptr [r14+38] // &lt;-- this writes the requirement value to the current action count in the register ax
  dec ax // &lt;--- this is a safeguard to prevent problems


code:
  movzx ecx,ax
  inc ecx
  jmp return

camoMastersB:
  jmp newmem
return:
registersymbol(camoMastersB)

[DISABLE]

camoMastersB:
  db 0F B7 C8 FF C1

unregistersymbol(camoMastersB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Project.dll+374F30B

Project.dll+374F2D9: 4C 8B 05 D8 83 3E 01  - mov r8,[Project.dll+4B376B8]
Project.dll+374F2E0: 49 8D 8F BC 13 00 00  - lea rcx,[r15+000013BC]
Project.dll+374F2E7: E8 84 70 DF FD        - call Project.dll+1546370
Project.dll+374F2EC: F2 0F 10 00           - movsd xmm0,[rax]
Project.dll+374F2F0: F2 0F 11 44 24 40     - movsd [rsp+40],xmm0
Project.dll+374F2F6: 0F B7 40 08           - movzx eax,word ptr [rax+08]
Project.dll+374F2FA: 66 89 44 24 48        - mov [rsp+48],ax
Project.dll+374F2FF: 33 D2                 - xor edx,edx
Project.dll+374F301: 48 8D 4C 24 40        - lea rcx,[rsp+40]
Project.dll+374F306: E8 A5 BA E4 FC        - call Project.dll+59ADB0
// ---------- INJECTING HERE ----------
Project.dll+374F30B: 0F B7 C8              - movzx ecx,ax
// ---------- DONE INJECTING  ----------
Project.dll+374F30E: FF C1                 - inc ecx
Project.dll+374F310: 45 0F B7 46 38        - movzx r8d,word ptr [r14+38]
Project.dll+374F315: 4C 8B 0D 34 1F 3E 01  - mov r9,[Project.dll+4B31250]
Project.dll+374F31C: 33 D2                 - xor edx,edx
Project.dll+374F31E: E8 1D 7D 8B FD        - call Project.dll+1007040
Project.dll+374F323: 45 33 C0              - xor r8d,r8d
Project.dll+374F326: 0F B7 D0              - movzx edx,ax
Project.dll+374F329: 48 8D 4C 24 60        - lea rcx,[rsp+60]
Project.dll+374F32E: E8 8D BA E4 FC        - call Project.dll+59ADC0
Project.dll+374F333: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1397</ID>
                  <Description>"&lt;---   description"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1389</ID>
                      <Description>"demon ruby requires to kill 1 slayer in demon slayer mode"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1390</ID>
                      <Description>"combat zone top requires to win 1 combat the as last survivor"</Description>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>table made by ZoDDeL
youtube.com/ZoDDeL
</Comments>
  <LuaScript>if not syntaxcheck then

	--getMemoryViewForm().Visible = true
	getAutoAttachList().add("CombatMaster.exe")


function onOpenProcess()
  local timer = createTimer(nil, false)
  timer.Interval = 1
  timer.OnTimer = function(timer)
    local list = getAddressList()
    local mem = list.getMemoryRecordByDescription("pause")
    mem.Active = true
   timer.Destroy()
  end
  timer.Enabled = true
end



	function cycleFullCompact( sender, force )
		local state = not( compactmenuitem.Caption == 'Compact View Mode' )
		if force ~= nil then
		  state = not force
		end
		compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
		getMainForm().Splitter1.Visible = state
		getMainForm().Panel4.Visible = state
		getMainForm().Panel5.Visible = state
	end

	function addCompactMenu()
		if compactmenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		compactmenuitem = createMenuItem( parent )
		parent.add( compactmenuitem )
		compactmenuitem.Caption = 'Compact View Mode'
		compactmenuitem.OnClick = cycleFullCompact
		compactmenualreadyexists = 'yes'
	end

	addCompactMenu()
	cycleFullCompact( nil, true )


	function pushYoutube( sender, force )
		local state = not( youtubemenuitem.Caption == 'my Youtube' )
		if force ~= nil then
		   state = not force
		end
		youtubemenuitem.Caption = state and 'my Youtube' or 'my Youtube'
		if force == nil then
		shellExecute('https://www.youtube.com/@ZoDDeL')
		end
	end

	function addYoutubeButton()
		if donomenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		youtubemenuitem = createMenuItem( parent )
		parent.add( youtubemenuitem )
		youtubemenuitem.Caption = 'my Youtube'
		youtubemenuitem.OnClick = pushYoutube
		youtubemenualreadyexists = 'yes'
	end

	addYoutubeButton()
	pushYoutube( nil, true )


	function pushDono( sender, force )
		local state = not( donomenuitem.Caption == 'Thx for your Donation :)' )
		if force ~= nil then
		   state = not force
		end
		donomenuitem.Caption = state and 'Thx for your Donation :)' or 'Paypal Donation'
		if force == nil then
		shellExecute('https://paypal.me/zoddel')
		end
	end

	function addDonoButton()
		if donomenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		donomenuitem = createMenuItem( parent )
		parent.add( donomenuitem )
		donomenuitem.Caption = 'Thx for your Donation :)'
		donomenuitem.OnClick = pushDono
		donomenualreadyexists = 'yes'
	end

	addDonoButton()
	pushDono( nil, true )


	function pushGitHub( sender, force )
		local state = not( githubmenuitem.Caption == 'GitHub' )
		if force ~= nil then
		   state = not force
		end
		githubmenuitem.Caption = state and 'GitHub' or 'GitHub'
		if force == nil then
		shellExecute('https://github.com/ZoDDeL/CM-Ultimate')
		end
	end

	function addGitHubButton()
		if githubmenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		githubmenuitem = createMenuItem( parent )
		parent.add( githubmenuitem )
		githubmenuitem.Caption = 'GitHub'
		githubmenuitem.OnClick = pushGitHub
		githubmenualreadyexists = 'yes'
	end

	addGitHubButton()
	pushGitHub( nil, true )


	local url = "https://raw.githubusercontent.com/ZoDDeL/CM-Ultimate/refs/heads/main/CM_Ultimate.CT"
	local filename = "C:/CM_Ultimate.CT"

	function downloadFile(url, filename)
	    if fileExists(filename) then
        os.remove(filename)
		end


		local http = getInternet()
		local file = io.open(filename, "wb")
		if file then
			file:write(http.getURL(url))
			file:close()
		end
		http.destroy()

	end

	function pushDownload( sender, force )
		local state = not( downloadmenuitem.Caption == 'Download latest Table' )
		if force ~= nil then
		   state = not force
		end
		downloadmenuitem.Caption = state and 'Download latest Table' or 'Download latest Table'
		if force == nil then
			downloadFile(url, filename)
			sleep(1000)
			loadTable(filename)
		end
	end

	function addDownloadButton()
		if downloadmenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		downloadmenuitem = createMenuItem( parent )
		parent.add( downloadmenuitem )
		downloadmenuitem.Caption = 'Download Table'
		downloadmenuitem.OnClick = pushDownload
		downloadmenualreadyexists = 'yes'
	end

	addDownloadButton()
	pushDownload( nil, true )





end
</LuaScript>
</CheatTable>
